//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.3
//     from Assets/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""player"",
            ""id"": ""3c83b783-1cca-4d58-bb6c-a75b83029a53"",
            ""actions"": [
                {
                    ""name"": ""forward"",
                    ""type"": ""Button"",
                    ""id"": ""8aee03c5-fb37-477b-a5f3-4097b14217c8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""backward"",
                    ""type"": ""Button"",
                    ""id"": ""d1110c25-3a44-49d8-9208-318d92344eb4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""right"",
                    ""type"": ""Button"",
                    ""id"": ""53e51900-b648-44b6-bd69-1e3cb2b6d9df"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""left"",
                    ""type"": ""Button"",
                    ""id"": ""947c23f0-f9f8-4bfb-a6a7-dafa4ac21612"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""shift"",
                    ""type"": ""Button"",
                    ""id"": ""37eaabef-7fd6-4ce5-b781-f84b7ed3ad94"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""9b72daa3-cc73-4dce-a65f-23fbc4b5c1b7"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""forward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""12ddc8c3-87cf-4c85-a122-0dacd7addff9"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""forward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""38a131b8-3a4f-44ee-bc28-98271b5a2ffe"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""backward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ee25b462-bda8-45dd-93f4-48cd5b1e9035"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""backward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f7586bbf-2bcb-4b7a-aea7-16ac8fedfbe6"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""69d5f71b-7746-4339-ad2d-c6b53ce4994e"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9efaa1e6-9058-452a-9514-5908d28c10ec"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""44b7eb02-30f2-4893-bb7e-814a4e28d4a0"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1185af1d-2c94-4f40-97b2-c9b3cfe0fc77"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""shift"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""60d82c9e-e712-4a4e-843e-e76f680b2ba7"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""shift"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""buttons"",
            ""id"": ""091d0e83-a64d-4e6d-bc62-b7ec57a4c1a6"",
            ""actions"": [
                {
                    ""name"": ""up"",
                    ""type"": ""Button"",
                    ""id"": ""b272f50e-4e79-4d9f-a9c1-b2155382cb1b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""right"",
                    ""type"": ""Button"",
                    ""id"": ""105db2ab-7477-4c66-8f91-43f1fa0747a7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""left"",
                    ""type"": ""Button"",
                    ""id"": ""cc39e19d-9afd-4341-9f64-7d950e2f4dfc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""down"",
                    ""type"": ""Button"",
                    ""id"": ""a4bfa37a-3d6a-45f0-940f-d538ab2d4be2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""interact"",
                    ""type"": ""Button"",
                    ""id"": ""963f3946-d1d8-42d8-a8e9-13559d41ce44"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""interact2"",
                    ""type"": ""Button"",
                    ""id"": ""d0d13a95-2ad2-4be5-970b-5f34314acd2a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""interact3"",
                    ""type"": ""Button"",
                    ""id"": ""395a5e13-8e3f-4a57-abe9-5c06a4d228d9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""enter"",
                    ""type"": ""Button"",
                    ""id"": ""da070d09-bc71-46ff-b37a-2ed471457e0b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""exit"",
                    ""type"": ""Button"",
                    ""id"": ""860cec9f-88aa-4ad1-be28-a8b7e5b641e5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""6629ebf0-e88a-46b7-82a1-bc22ec7dce3e"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""33bf71b1-f56c-48b9-bb7b-56b316f11aa2"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""90fe1221-7b69-452b-9c8b-5d8682d5e90d"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b2f6f763-a8db-4918-887a-594f2e4df370"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a820de0c-993c-40ee-bad6-982f4a3694bd"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""88a19107-5643-4140-9fd7-19f2cb9898bf"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a0ae42b5-5e0d-4f22-a977-fe87255077cc"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""29f81fa1-00a7-41c5-b8d1-9d634c8ed162"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f04287e6-1452-4538-9854-c4c1258630d3"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""49fe13e7-730d-4c9a-93ba-73ec786d9b24"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d4bdc5f-db4c-4661-b1c3-448effbca9ba"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""interact2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""914bf937-a1e5-4317-acaf-3ecbab2bef51"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""interact2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2e0c8e0f-6c26-419a-8c3c-b014db9dcedc"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""interact3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dab3afa5-f5ee-4e10-a890-85b702abc8e0"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""interact3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""93acff59-4072-453f-94d3-f9a1ee27e4f8"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""enter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0d7b21e6-64e0-4086-80aa-54bcf0a8f4e8"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""enter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""711a077e-c3a0-4392-8351-43a16ecece02"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""enter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""610c48e5-2e1e-4628-8d40-949893f45403"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""enter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4f51ca16-ff0e-42a4-b127-97a67af261cf"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""enter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d78cfaa-b65b-4c00-a02d-2e8503d04103"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""enter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a3a135fe-7749-4f4f-897d-ccd47e67dbe7"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""enter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""39e03e2b-3aed-49d6-a3c1-824af761776f"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""enter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""42c46511-54c8-44fd-9481-5dc9089fc97f"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""exit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e38d31d9-6a1c-40da-a19a-65d85118b840"",
                    ""path"": ""<XInputController>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""exit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // player
        m_player = asset.FindActionMap("player", throwIfNotFound: true);
        m_player_forward = m_player.FindAction("forward", throwIfNotFound: true);
        m_player_backward = m_player.FindAction("backward", throwIfNotFound: true);
        m_player_right = m_player.FindAction("right", throwIfNotFound: true);
        m_player_left = m_player.FindAction("left", throwIfNotFound: true);
        m_player_shift = m_player.FindAction("shift", throwIfNotFound: true);
        // buttons
        m_buttons = asset.FindActionMap("buttons", throwIfNotFound: true);
        m_buttons_up = m_buttons.FindAction("up", throwIfNotFound: true);
        m_buttons_right = m_buttons.FindAction("right", throwIfNotFound: true);
        m_buttons_left = m_buttons.FindAction("left", throwIfNotFound: true);
        m_buttons_down = m_buttons.FindAction("down", throwIfNotFound: true);
        m_buttons_interact = m_buttons.FindAction("interact", throwIfNotFound: true);
        m_buttons_interact2 = m_buttons.FindAction("interact2", throwIfNotFound: true);
        m_buttons_interact3 = m_buttons.FindAction("interact3", throwIfNotFound: true);
        m_buttons_enter = m_buttons.FindAction("enter", throwIfNotFound: true);
        m_buttons_exit = m_buttons.FindAction("exit", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // player
    private readonly InputActionMap m_player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_player_forward;
    private readonly InputAction m_player_backward;
    private readonly InputAction m_player_right;
    private readonly InputAction m_player_left;
    private readonly InputAction m_player_shift;
    public struct PlayerActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @forward => m_Wrapper.m_player_forward;
        public InputAction @backward => m_Wrapper.m_player_backward;
        public InputAction @right => m_Wrapper.m_player_right;
        public InputAction @left => m_Wrapper.m_player_left;
        public InputAction @shift => m_Wrapper.m_player_shift;
        public InputActionMap Get() { return m_Wrapper.m_player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @forward.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnForward;
                @forward.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnForward;
                @forward.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnForward;
                @backward.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBackward;
                @backward.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBackward;
                @backward.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBackward;
                @right.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRight;
                @right.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRight;
                @right.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRight;
                @left.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeft;
                @left.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeft;
                @left.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeft;
                @shift.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShift;
                @shift.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShift;
                @shift.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnShift;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @forward.started += instance.OnForward;
                @forward.performed += instance.OnForward;
                @forward.canceled += instance.OnForward;
                @backward.started += instance.OnBackward;
                @backward.performed += instance.OnBackward;
                @backward.canceled += instance.OnBackward;
                @right.started += instance.OnRight;
                @right.performed += instance.OnRight;
                @right.canceled += instance.OnRight;
                @left.started += instance.OnLeft;
                @left.performed += instance.OnLeft;
                @left.canceled += instance.OnLeft;
                @shift.started += instance.OnShift;
                @shift.performed += instance.OnShift;
                @shift.canceled += instance.OnShift;
            }
        }
    }
    public PlayerActions @player => new PlayerActions(this);

    // buttons
    private readonly InputActionMap m_buttons;
    private IButtonsActions m_ButtonsActionsCallbackInterface;
    private readonly InputAction m_buttons_up;
    private readonly InputAction m_buttons_right;
    private readonly InputAction m_buttons_left;
    private readonly InputAction m_buttons_down;
    private readonly InputAction m_buttons_interact;
    private readonly InputAction m_buttons_interact2;
    private readonly InputAction m_buttons_interact3;
    private readonly InputAction m_buttons_enter;
    private readonly InputAction m_buttons_exit;
    public struct ButtonsActions
    {
        private @PlayerControls m_Wrapper;
        public ButtonsActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @up => m_Wrapper.m_buttons_up;
        public InputAction @right => m_Wrapper.m_buttons_right;
        public InputAction @left => m_Wrapper.m_buttons_left;
        public InputAction @down => m_Wrapper.m_buttons_down;
        public InputAction @interact => m_Wrapper.m_buttons_interact;
        public InputAction @interact2 => m_Wrapper.m_buttons_interact2;
        public InputAction @interact3 => m_Wrapper.m_buttons_interact3;
        public InputAction @enter => m_Wrapper.m_buttons_enter;
        public InputAction @exit => m_Wrapper.m_buttons_exit;
        public InputActionMap Get() { return m_Wrapper.m_buttons; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ButtonsActions set) { return set.Get(); }
        public void SetCallbacks(IButtonsActions instance)
        {
            if (m_Wrapper.m_ButtonsActionsCallbackInterface != null)
            {
                @up.started -= m_Wrapper.m_ButtonsActionsCallbackInterface.OnUp;
                @up.performed -= m_Wrapper.m_ButtonsActionsCallbackInterface.OnUp;
                @up.canceled -= m_Wrapper.m_ButtonsActionsCallbackInterface.OnUp;
                @right.started -= m_Wrapper.m_ButtonsActionsCallbackInterface.OnRight;
                @right.performed -= m_Wrapper.m_ButtonsActionsCallbackInterface.OnRight;
                @right.canceled -= m_Wrapper.m_ButtonsActionsCallbackInterface.OnRight;
                @left.started -= m_Wrapper.m_ButtonsActionsCallbackInterface.OnLeft;
                @left.performed -= m_Wrapper.m_ButtonsActionsCallbackInterface.OnLeft;
                @left.canceled -= m_Wrapper.m_ButtonsActionsCallbackInterface.OnLeft;
                @down.started -= m_Wrapper.m_ButtonsActionsCallbackInterface.OnDown;
                @down.performed -= m_Wrapper.m_ButtonsActionsCallbackInterface.OnDown;
                @down.canceled -= m_Wrapper.m_ButtonsActionsCallbackInterface.OnDown;
                @interact.started -= m_Wrapper.m_ButtonsActionsCallbackInterface.OnInteract;
                @interact.performed -= m_Wrapper.m_ButtonsActionsCallbackInterface.OnInteract;
                @interact.canceled -= m_Wrapper.m_ButtonsActionsCallbackInterface.OnInteract;
                @interact2.started -= m_Wrapper.m_ButtonsActionsCallbackInterface.OnInteract2;
                @interact2.performed -= m_Wrapper.m_ButtonsActionsCallbackInterface.OnInteract2;
                @interact2.canceled -= m_Wrapper.m_ButtonsActionsCallbackInterface.OnInteract2;
                @interact3.started -= m_Wrapper.m_ButtonsActionsCallbackInterface.OnInteract3;
                @interact3.performed -= m_Wrapper.m_ButtonsActionsCallbackInterface.OnInteract3;
                @interact3.canceled -= m_Wrapper.m_ButtonsActionsCallbackInterface.OnInteract3;
                @enter.started -= m_Wrapper.m_ButtonsActionsCallbackInterface.OnEnter;
                @enter.performed -= m_Wrapper.m_ButtonsActionsCallbackInterface.OnEnter;
                @enter.canceled -= m_Wrapper.m_ButtonsActionsCallbackInterface.OnEnter;
                @exit.started -= m_Wrapper.m_ButtonsActionsCallbackInterface.OnExit;
                @exit.performed -= m_Wrapper.m_ButtonsActionsCallbackInterface.OnExit;
                @exit.canceled -= m_Wrapper.m_ButtonsActionsCallbackInterface.OnExit;
            }
            m_Wrapper.m_ButtonsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @up.started += instance.OnUp;
                @up.performed += instance.OnUp;
                @up.canceled += instance.OnUp;
                @right.started += instance.OnRight;
                @right.performed += instance.OnRight;
                @right.canceled += instance.OnRight;
                @left.started += instance.OnLeft;
                @left.performed += instance.OnLeft;
                @left.canceled += instance.OnLeft;
                @down.started += instance.OnDown;
                @down.performed += instance.OnDown;
                @down.canceled += instance.OnDown;
                @interact.started += instance.OnInteract;
                @interact.performed += instance.OnInteract;
                @interact.canceled += instance.OnInteract;
                @interact2.started += instance.OnInteract2;
                @interact2.performed += instance.OnInteract2;
                @interact2.canceled += instance.OnInteract2;
                @interact3.started += instance.OnInteract3;
                @interact3.performed += instance.OnInteract3;
                @interact3.canceled += instance.OnInteract3;
                @enter.started += instance.OnEnter;
                @enter.performed += instance.OnEnter;
                @enter.canceled += instance.OnEnter;
                @exit.started += instance.OnExit;
                @exit.performed += instance.OnExit;
                @exit.canceled += instance.OnExit;
            }
        }
    }
    public ButtonsActions @buttons => new ButtonsActions(this);
    public interface IPlayerActions
    {
        void OnForward(InputAction.CallbackContext context);
        void OnBackward(InputAction.CallbackContext context);
        void OnRight(InputAction.CallbackContext context);
        void OnLeft(InputAction.CallbackContext context);
        void OnShift(InputAction.CallbackContext context);
    }
    public interface IButtonsActions
    {
        void OnUp(InputAction.CallbackContext context);
        void OnRight(InputAction.CallbackContext context);
        void OnLeft(InputAction.CallbackContext context);
        void OnDown(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnInteract2(InputAction.CallbackContext context);
        void OnInteract3(InputAction.CallbackContext context);
        void OnEnter(InputAction.CallbackContext context);
        void OnExit(InputAction.CallbackContext context);
    }
}
